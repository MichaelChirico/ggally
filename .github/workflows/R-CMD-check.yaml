on:
  push: { branches: [master, main, rc-**] }
  pull_request: { branches: [master, main]}

name: Package Checks

jobs:
  ## Need to supply env var
  # pkgdown:
  #   uses: rstudio/shinycoreci/.github/workflows/call-pkgdown.yaml@v1
  Rituals:
    uses: rstudio/shinycoreci/.github/workflows/call-rituals.yaml@v1
  ## Can not use regular R cmd check until printing tests are done with vdiffr
  # R-CMD-check:
  #   uses: rstudio/shinycoreci/.github/workflows/call-R-CMD-check.yaml@v1

  pkgdown:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - uses: rstudio/shinycoreci/.github/composite/install-r-package@v1
        with:
          needs: website
          extra-packages: |
            pkgdown
            covr

      - name: Test coverage
        env:
          CAN_PRINT: "TRUE"
        run: covr::codecov()
        shell: Rscript {0}

      - name: Verify reference (PR)
        if: github.event_name != 'push'
        shell: Rscript {0}
        env:
          CAN_PRINT: "TRUE"
        run: |
          pkgdown::build_site(new_process = FALSE)
          if (!require("testthat")) pak::pkg_install("testthat")
          testthat::expect_warning(
            pkgdown::build_reference_index(),
            NA
          )

      - name: Build and deploy pkgdown site (push)
        if: github.event_name == 'push'
        env:
          CAN_PRINT: "TRUE"
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

  r-versions:
    runs-on: ubuntu-latest
    outputs:
      devel:    ${{ steps.devel.outputs.installed-r-version    }}
      release:  ${{ steps.release.outputs.installed-r-version  }}
      oldrel-1: ${{ steps.oldrel-1.outputs.installed-r-version }}
      oldrel-2: ${{ steps.oldrel-2.outputs.installed-r-version }}
      oldrel-3: ${{ steps.oldrel-3.outputs.installed-r-version }}
      oldrel-4: ${{ steps.oldrel-4.outputs.installed-r-version }}
    steps:
    - { name: devel,    id: devel,    uses: r-lib/actions/setup-r@v1, with: { r-version: devel,    install-r: false } }
    - { name: release,  id: release,  uses: r-lib/actions/setup-r@v1, with: { r-version: release,  install-r: false } }
    - { name: oldrel-1, id: oldrel-1, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-1, install-r: false } }
    - { name: oldrel-2, id: oldrel-2, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-2, install-r: false } }
    - { name: oldrel-3, id: oldrel-3, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-3, install-r: false } }
    - { name: oldrel-4, id: oldrel-4, uses: r-lib/actions/setup-r@v1, with: { r-version: oldrel-4, install-r: false } }

  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    needs: [r-versions]
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: "macOS-latest", r: "${{ needs.r-versions.outputs.release }}" }
        - { os: "ubuntu-18.04", r: "${{ needs.r-versions.outputs.release }}" }
        - { os: "windows-latest", r: "${{ needs.r-versions.outputs.release }}" }
        - { os: "windows-latest", r: "3.6" }

        - { os: "ubuntu-20.04", r: "${{ needs.r-versions.outputs.devel }}", http-user-agent: release }
        - { os: "ubuntu-20.04", r: "${{ needs.r-versions.outputs.release }}" }
        - { os: "ubuntu-20.04", r: "${{ needs.r-versions.outputs.oldrel-1 }}" }
        - { os: "ubuntu-20.04", r: "${{ needs.r-versions.outputs.oldrel-2 }}" }
        - { os: "ubuntu-20.04", r: "${{ needs.r-versions.outputs.oldrel-3 }}" }
        - { os: "ubuntu-20.04", r: "${{ needs.r-versions.outputs.oldrel-4 }}" }

    env:
      GITHUB_PAT: ${{ github.token }}

    steps:
      - uses: actions/checkout@v2

      - uses: rstudio/shinycoreci/.github/composite/install-r-package@v1
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          cache-version: 1
          needs: check
          extra-packages: |
            rcmdcheck

      - uses: r-lib/actions/check-r-package@v1
        name: Check as CRAN

      - uses: r-lib/actions/check-r-package@v1
        name: Check w/ printing
        env:
          CAN_PRINT: "TRUE"

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: "check"
